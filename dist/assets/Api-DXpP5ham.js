var f=Object.defineProperty;var g=(n,s,e)=>s in n?f(n,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[s]=e;var h=(n,s,e)=>g(n,typeof s!="symbol"?s+"":s,e);import{u as m,b2 as v,b3 as d,A as w}from"./index-Bx4W_xK3.js";class c extends Error{constructor(e,t=null,a=null){super(e);h(this,"code");h(this,"errors");this.code=a,this.errors=t}}const $=()=>({fetch:(s,e={})=>{const{appCompanyCode:t,apiBaseUrl:a,storagePrefix:o}=w(),u=m();return v(`${a}/${s}`,{beforeFetch:({options:r})=>(r.headers={Accept:"application/json",Authorization:`Bearer ${u.token}`,...r.headers,Locale:localStorage.getItem(`${o}lang`),"X-Company-Code":t},{options:{...r,...e}}),updateDataOnError:!0,onFetchError(r){var i,l,p;if(r.error){if(((i=r.response)==null?void 0:i.status)===401)return u.logout(),setTimeout(()=>d.push({name:"auth.login"})),r;if(((l=r.response)==null?void 0:l.status)===500)return d.push({name:"500"}),r;r.data&&r.data.message&&(r.error=new c(r.data.message,r.data.errors,(p=r.response)==null?void 0:p.status))}return r}})}}),{fetch:y}=$();class R{constructor(){h(this,"fetch",y);h(this,"resource","")}async get(s={}){var r;let e=this.resource;const t=new URLSearchParams(s).toString();Object.keys(s).length&&(e+=`?${t}`);const{data:a,error:o,response:u}=await this.fetch(e).json();return this.handleResponse(a.value,o.value,(r=u.value)==null?void 0:r.status)}async paginate(s={}){const e={...s,paginate:!0};try{return await this.get(e)}catch(t){const a=t;throw new c(a.message,a.errors)}}async show(s){var o;const{data:e,error:t,response:a}=await this.fetch(`${this.resource}/${s}`).json();return this.handleResponse(e.value,t.value,(o=a.value)==null?void 0:o.status)}async store(s={}){var o;const{data:e,error:t,response:a}=await this.fetch(this.resource).post(s).json();return this.handleResponse(e.value,t.value,(o=a.value)==null?void 0:o.status)}async update(s,e={}){var u;const{data:t,error:a,response:o}=await this.fetch(`${this.resource}/${s}`).put(e).json();return this.handleResponse(t.value,a.value,(u=o.value)==null?void 0:u.status)}async destroy(s){var o;const{data:e,error:t,response:a}=await this.fetch(`${this.resource}/${s}`).delete().json();return this.handleResponse(e.value,t.value,(o=a.value)==null?void 0:o.status)}handleResponse(s,e,t){if(e!=null&&e.message)throw new c(e.message,e.errors,t);return s}}export{R as A};
